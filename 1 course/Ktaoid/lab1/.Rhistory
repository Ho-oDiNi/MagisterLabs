N3_group1 <- cor(M1, use="pairwise.complete.obs", method="kendall")  # Коэффициенты Кендалла
# Коэффициенты корреляции для второй группы
N1_group2 <- cor(M2, use="pairwise.complete.obs")  # Коэффициенты Пирсона
N2_group2 <- cor(M2, use="pairwise.complete.obs", method="spearman")  # Коэффициенты Спирмена
N3_group2 <- cor(M2, use="pairwise.complete.obs", method="kendall")  # Коэффициенты Кендалла
# Вывод коэффициентов корреляции
print("Корреляция Пирсона для первой группы")
print(N1_group1)
print("Корреляция Спирмена для первой группы")
print(N2_group1)
print("Корреляция Кендалла для первой группы")
print(N3_group1)
print("Корреляция Пирсона для второй группы")
print(N1_group2)
print("Корреляция Спирмена для второй группы")
print(N2_group2)
print("Корреляция Кендалла для второй группы")
print(N3_group2)
# Графическое представление для первой группы
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(N1_group1, method="color", col=NULL,
type="upper", order="hclust",
addCoef.col = "black", tl.col="black", tl.srt=45,
sig.level = 0.01, insig = "blank", diag=FALSE)
# Графическое представление для второй группы
corrplot(N1_group2, method="color", col=NULL,
type="upper", order="hclust",
addCoef.col = "black", tl.col="black", tl.srt=45,
sig.level = 0.01, insig = "blank", diag=FALSE)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1), method = "pearson")
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1), method = "pearson")
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1), method = "pearson")
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1), method = "pearson")
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
print("Корреляция Кендалла для первой группы")
print(N3_group1)
print("Корреляция Пирсона для второй группы")
print(N1_group2)
# Для расчета частных коэффициентов корреляции
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
vars_group1 <- M1[, c(2, 4, 1, 3, 5)]
vars_group2 <- M2[, c(2, 4, 1, 3, 5)]
# Вычисление частных коэффициентов корреляции
pcor_group1 <- pcor(vars_group1)
pcor_group2 <- pcor(vars_group2)
# Вывод результатов
print("Частный коэффициент корреляции для первой группы:")
print(pcor_group1)
print("Частный коэффициент корреляции для второй группы:")
print(pcor_group2)
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
# Загрузка необходимых библиотек
library(ggm)
library(corrplot)
data_group1 <- subset(data, группа == 1)
data_group2 <- subset(data, группа == 2)
# Создание таблиц с числовыми переменными для первой и второй групп
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
# Коэффициенты корреляции для первой группы
N1_group1 <- cor(M1, use="pairwise.complete.obs")  # Коэффициенты Пирсона
N2_group1 <- cor(M1, use="pairwise.complete.obs", method="spearman")  # Коэффициенты Спирмена
N3_group1 <- cor(M1, use="pairwise.complete.obs", method="kendall")  # Коэффициенты Кендалла
# Коэффициенты корреляции для второй группы
N1_group2 <- cor(M2, use="pairwise.complete.obs")  # Коэффициенты Пирсона
N2_group2 <- cor(M2, use="pairwise.complete.obs", method="spearman")  # Коэффициенты Спирмена
N3_group2 <- cor(M2, use="pairwise.complete.obs", method="kendall")  # Коэффициенты Кендалла
# Вывод коэффициентов корреляции
print("Корреляция Пирсона для первой группы")
print(N1_group1)
print("Корреляция Спирмена для первой группы")
print(N2_group1)
print("Корреляция Кендалла для первой группы")
print(N3_group1)
print("Корреляция Пирсона для второй группы")
print(N1_group2)
print("Корреляция Спирмена для второй группы")
print(N2_group2)
print("Корреляция Кендалла для второй группы")
print(N3_group2)
# Графическое представление для первой группы
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(N1_group1, method="color", col=NULL,
type="upper", order="hclust",
addCoef.col = "black", tl.col="black", tl.srt=45,
sig.level = 0.01, insig = "blank", diag=FALSE)
# Графическое представление для второй группы
corrplot(N1_group2, method="color", col=NULL,
type="upper", order="hclust",
addCoef.col = "black", tl.col="black", tl.srt=45,
sig.level = 0.01, insig = "blank", diag=FALSE)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
M <- data[,unlist(lapply(data, is.numeric))]
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M))
#частный коэффициент корреляции
# Подмножества для первой и второй группы
data_group1 <- subset(data, группа == 1)
data_group2 <- subset(data, группа == 2)
library(ppcor)
# Рассчитываем матрицу корреляции Пирсона для первой группы
cor_matrix_group1 <- cor(data_group1[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет")], use = "complete.obs")
# Находим пару переменных с максимальным модулем коэффициента корреляции
max_corr_vars_group1 <- which(abs(cor_matrix_group1) == max(abs(cor_matrix_group1[upper.tri(cor_matrix_group1)])), arr.ind = TRUE)
# Повторяем для второй группы
cor_matrix_group2 <- cor(data_group2[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет")], use = "complete.obs")
max_corr_vars_group2 <- which(abs(cor_matrix_group2) == max(abs(cor_matrix_group2[upper.tri(cor_matrix_group2)])), arr.ind = TRUE)
# Частный коэффициент корреляции для первой группы
var1_group1 <- names(data_group1)[max_corr_vars_group1[1]]
var2_group1 <- names(data_group1)[max_corr_vars_group1[2]]
pcor_result_group1 <- pcor.test(data_group1[[var1_group1]], data_group1[[var2_group1]], data_group1$стаж.работы.в.сети.Интернет)
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
# Загрузка необходимых библиотек
library(ggm)
library(corrplot)
data_group1 <- subset(data, группа == 1)
data_group2 <- subset(data, группа == 2)
# Создание таблиц с числовыми переменными для первой и второй групп
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
# Коэффициенты корреляции для первой группы
N1_group1 <- cor(M1, use="pairwise.complete.obs")  # Коэффициенты Пирсона
N2_group1 <- cor(M1, use="pairwise.complete.obs", method="spearman")  # Коэффициенты Спирмена
N3_group1 <- cor(M1, use="pairwise.complete.obs", method="kendall")  # Коэффициенты Кендалла
# Коэффициенты корреляции для второй группы
N1_group2 <- cor(M2, use="pairwise.complete.obs")  # Коэффициенты Пирсона
N2_group2 <- cor(M2, use="pairwise.complete.obs", method="spearman")  # Коэффициенты Спирмена
N3_group2 <- cor(M2, use="pairwise.complete.obs", method="kendall")  # Коэффициенты Кендалла
# Вывод коэффициентов корреляции
print("Корреляция Пирсона для первой группы")
print(N1_group1)
print("Корреляция Спирмена для первой группы")
print(N2_group1)
print("Корреляция Кендалла для первой группы")
print(N3_group1)
print("Корреляция Пирсона для второй группы")
print(N1_group2)
print("Корреляция Спирмена для второй группы")
print(N2_group2)
print("Корреляция Кендалла для второй группы")
print(N3_group2)
# Графическое представление для первой группы
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(N1_group1, method="color", col=NULL,
type="upper", order="hclust",
addCoef.col = "black", tl.col="black", tl.srt=45,
sig.level = 0.01, insig = "blank", diag=FALSE)
# Графическое представление для второй группы
corrplot(N1_group2, method="color", col=NULL,
type="upper", order="hclust",
addCoef.col = "black", tl.col="black", tl.srt=45,
sig.level = 0.01, insig = "blank", diag=FALSE)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1), method = "pearson")
view(M1)
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
View(M1)
names(M1)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1, use = "pairwise.complete.obs"), method = "pearson")
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1), method = "pearson")
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1), method = "pearson")
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov_M1, method = "pearson")
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
library(ggm)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
# Убедитесь, что библиотека ggm загружена
library(ggm)
# Расчет матрицы ковариаций
cov_M1 <- cov(M1, use = "pairwise.complete.obs")
cov_M2 <- cov(M2, use = "pairwise.complete.obs")
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Для расчета частных коэффициентов корреляции
# Убедитесь, что вы указали правильные индексы переменных, которые вы хотите использовать
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cor_M1)
library(ggm)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
library(ggm)
# Пример данных (замените M1 и M2 на ваши данные)
# M1 <- your_data_frame1
# M2 <- your_data_frame2
# Проверка на наличие NA значений
if (any(is.na(M1))) {
M1 <- na.omit(M1)  # Удаляем строки с NA
}
if (any(is.na(M2))) {
M2 <- na.omit(M2)  # Удаляем строки с NA
}
# Расчет матрицы ковариаций
cov_M1 <- cov(M1)
cov_M2 <- cov(M2)
# Преобразуем матрицы ковариаций в матрицы корреляций
cor_M1 <- cov2cor(cov_M1)
cor_M2 <- cov2cor(cov_M2)
# Убедитесь, что индексы переменных корректны
indices <- c(2, 4, 1, 3, 5)  # Проверьте, чтобы эти индексы существовали в ваших данных
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(indices, cor_M1)
#частный коэффициент корреляции
# Подмножества для первой и второй группы
data_group1 <- subset(data, группа == 1)
data_group2 <- subset(data, группа == 2)
library(ppcor)
# Рассчитываем матрицу корреляции Пирсона для первой группы
cor_matrix_group1 <- cor(data_group1[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет")], use = "complete.obs")
# Находим пару переменных с максимальным модулем коэффициента корреляции
max_corr_vars_group1 <- which(abs(cor_matrix_group1) == max(abs(cor_matrix_group1[upper.tri(cor_matrix_group1)])), arr.ind = TRUE)
# Повторяем для второй группы
cor_matrix_group2 <- cor(data_group2[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет")], use = "complete.obs")
max_corr_vars_group2 <- which(abs(cor_matrix_group2) == max(abs(cor_matrix_group2[upper.tri(cor_matrix_group2)])), arr.ind = TRUE)
# Частный коэффициент корреляции для первой группы
var1_group1 <- names(data_group1)[max_corr_vars_group1[1]]
var2_group1 <- names(data_group1)[max_corr_vars_group1[2]]
pcor_result_group1 <- pcor.test(data_group1[[var1_group1]], data_group1[[var2_group1]], data_group1$стаж.работы.в.сети.Интернет)
#частный коэффициент корреляции
# Подмножества для первой и второй группы
data_group1 <- subset(data, группа == 1)
data_group2 <- subset(data, группа == 2)
library(ppcor)
# Рассчитываем матрицу корреляции Пирсона для первой группы
cor_matrix_group1 <- cor(data_group1[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет")], use = "complete.obs")
# Находим пару переменных с максимальным модулем коэффициента корреляции
max_corr_vars_group1 <- which(abs(cor_matrix_group1) == max(abs(cor_matrix_group1[upper.tri(cor_matrix_group1)])), arr.ind = TRUE)
# Повторяем для второй группы
cor_matrix_group2 <- cor(data_group2[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет")], use = "complete.obs")
max_corr_vars_group2 <- which(abs(cor_matrix_group2) == max(abs(cor_matrix_group2[upper.tri(cor_matrix_group2)])), arr.ind = TRUE)
# Частный коэффициент корреляции для первой группы
var1_group1 <- names(data_group1)[max_corr_vars_group1[1]]
var2_group1 <- names(data_group1)[max_corr_vars_group1[2]]
pcor_result_group1 <- pcor.test(data_group1[[var1_group1]], data_group1[[var2_group1]], data_group1$стаж.работы.в.сети.Интернет)
library(ggm)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
library(ggm)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(cov(M1))
library(GGally)
library(psych)
# Выбор количественных переменных
quant_vars <- data[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет",
"среднее.количество.просматривемых.страниц.в.месяц",
"степень.активности..участие.в.Интернет.опросах....балльная.оценка")]
# Рассчёт матрицы коэффициентов корреляции Пирсона
cor_matrix <- cor(quant_vars, use = "complete.obs", method = "pearson")
# Функция для теста значимости корреляции (p-value) для каждой пары переменных
cor_test <- corr.test(quant_vars, method = "pearson")
# Вывод матрицы корреляции
print("Матрица коэффициентов корреляции:")
print(cor_matrix)
# Вывод p-значений
print("Матрица значимости (p-values):")
print(cor_test$p)
# Построение графика корреляций с помощью ggpairs (включает распределение и графики корреляций)
ggpairs(quant_vars,
upper = list(continuous = wrap("cor", size = 3, color = "blue")), # корреляции в верхней треугольной части
lower = list(continuous = "smooth"), # линейный тренд в нижней части
diag = list(continuous = "densityDiag")) # плотность распределений на диагонали
library(corrplot)
# Подготовка данных: выбор количественных переменных
quant_vars <- data[, sapply(data, is.numeric)]
# Расчёт матрицы коэффициентов корреляции Пирсона
cor_matrix <- cor(quant_vars, use = "complete.obs", method = "pearson")
# Устанавливаем параметры графического устройства перед построением графика
par(mar = c(1, 1, 1, 1))  # Уменьшаем отступы для графика
# Визуализация корреляционной матрицы с использованием corrplot
corrplot(cor_matrix,
method = "color",        # метод цветового заполнения
col = colorRampPalette(c("#B44444", "#FFFFFF", "#77AADD"))(200), # цветовая палитра
addCoef.col = "black",    # цвет значений коэффициентов
tl.col = "black",         # цвет подписей
tl.srt = 30,              # уменьшен угол поворота подписей
number.cex = 0.6,         # уменьшен размер шрифта коэффициентов
diag = FALSE)             # убирает значения на диагонали
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
library(ggm)
pcor_group1 <- pcor(c(2, 4, 1, 3, 5), cov(M1))
print("Частный коэффициент корреляции для первой группы:")
print(pcor_group1)
View(M1)
pcor_group1 <- pcor(c(3, 4, 1, 2, 5), cov(M1))
print("Частный коэффициент корреляции для первой группы:")
print(pcor_group1)
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
pcor_group2 <- pcor(c(3, 4, 1, 2, 5), cov(M2))
print(pcor_group2)
View(M2)
library(GGally)
library(psych)
# Выбор количественных переменных
quant_vars <- data[, c("возраст", "средний.доход.в.месяц", "стаж.работы.в.сети.Интернет",
"среднее.количество.просматривемых.страниц.в.месяц",
"степень.активности..участие.в.Интернет.опросах....балльная.оценка")]
# Рассчёт матрицы коэффициентов корреляции Пирсона
cor_matrix <- cor(quant_vars, use = "complete.obs", method = "pearson")
# Функция для теста значимости корреляции (p-value) для каждой пары переменных
cor_test <- corr.test(quant_vars, method = "pearson")
# Вывод матрицы корреляции
print("Матрица коэффициентов корреляции:")
print(cor_matrix)
# Вывод p-значений
print("Матрица значимости (p-values):")
print(cor_test$p)
# Построение графика корреляций с помощью ggpairs (включает распределение и графики корреляций)
ggpairs(quant_vars,
upper = list(continuous = wrap("cor", size = 3, color = "blue")), # корреляции в верхней треугольной части
lower = list(continuous = "smooth"), # линейный тренд в нижней части
diag = list(continuous = "densityDiag")) # плотность распределений на диагонали
ggpairs(data, columns = 2:10, aes(color = группа,alpha = 0.5))
data_group1 <- subset(data, группа == 1)
data_group2 <- subset(data, группа == 2)
# Создание таблиц с числовыми переменными для первой и второй групп
M1 <- data_group1[, unlist(lapply(data_group1, is.numeric))]
M2 <- data_group2[, unlist(lapply(data_group2, is.numeric))]
library(ggm)
# Для расчета частных коэффициентов корреляции
pcor_group1 <- pcor(c(3, 4, 1, 2, 5), cov(M1))
pcor_group2 <- pcor(c(3, 4, 1, 2, 5), cov(M2))
# Вывод частных коэффициентов
print("Частный коэффициент корреляции для первой группы:")
print(pcor_group1)
print("Частный коэффициент корреляции для второй группы:")
print(pcor_group2)
library(GGally)
ggpairs(data, columns = 2:10, aes(color = группа,alpha = 0.5))
library(GGally)
ggpairs(data, columns = 2:10, aes(color = группа,alpha = 0.5))
# Радиальная диаграмма для качественного признака
survey_table <- table(data$степень.активности..участие.в.Интернет.опросах....качественная.оценка, useNA = "no")
print(survey_table)
# Вычисление значений и меток для круговой диаграммы
survey_values <- as.vector(survey_table)
survey_labels <- names(survey_table)
percent_labels <- paste(survey_labels, "(", round(100 * survey_values / sum(survey_values), 1), "%)", sep = "")
# Круговая диаграмма
pie(survey_values,
labels = percent_labels,
main = "Круговая диаграмма по степени активности в опросах",
col = rainbow(length(survey_values)))
# Категориальная радиальная диаграмма
par(mfrow = c(2, 3))
# 1. Степень активности по полу
activity_by_gender <- table(data$степень.активности..участие.в.Интернет.опросах....качественная.оценка, data$пол)
# Для мужчин (пол = 1)
activity_male <- activity_by_gender[, "1"]
labels_male <- names(activity_male)
percent_labels_male <- paste(labels_male, "(", round(100 * activity_male / sum(activity_male), 1), "%)", sep = "")
pie(activity_male, labels = percent_labels_male, main = "Степень активности - Мужчины", col = rainbow(length(activity_male)), border = "white")
# Для женщин (пол = 2)
activity_female <- activity_by_gender[, "2"]
labels_female <- names(activity_female)
percent_labels_female <- paste(labels_female, "(", round(100 * activity_female / sum(activity_female), 1), "%)", sep = "")
pie(activity_female, labels = percent_labels_female, main = "Степень активности - Женщины", col = rainbow(length(activity_female)), border = "white")
# 2. Группа по полу
group_by_gender <- table(data$группа, data$пол)
# Для группы 1 (мужчины и женщины)
group_male <- group_by_gender[,"1"]
group_female <- group_by_gender[,"2"]
# Круговая диаграмма для мужчин по группе
percent_labels_group_male <- paste(names(group_male), "(", round(100 * group_male / sum(group_male), 1), "%)", sep = "")
pie(group_male, labels = percent_labels_group_male, main = "Группа - Мужчины", col = c("lightblue", "lightgreen"), border = "white")
# Круговая диаграмма для женщин по группе
percent_labels_group_female <- paste(names(group_female), "(", round(100 * group_female / sum(group_female), 1), "%)", sep = "")
pie(group_female, labels = percent_labels_group_female, main = "Группа - Женщины", col = c("lightblue", "lightgreen"), border = "white")
# 3. Профессиональная специализация по полу
specialization_by_gender <- table(data$профессиональная.специализация..насколько.тесно.профессия.клиента.связана.с.Интернет., data$пол)
# Для мужчин (пол = 1)
specialization_male <- specialization_by_gender[, "1"]
labels_male_specialization <- names(specialization_male)
percent_labels_specialization_male <- paste(labels_male_specialization, "(", round(100 * specialization_male / sum(specialization_male), 1), "%)", sep = "")
pie(specialization_male, labels = percent_labels_specialization_male, main = "Специализация - Мужчины", col = rainbow(length(specialization_male)), border = "white")
# Для женщин (пол = 2)
specialization_female <- specialization_by_gender[, "2"]
labels_female_specialization <- names(specialization_female)
percent_labels_specialization_female <- paste(labels_female_specialization, "(", round(100 * specialization_female / sum(specialization_female), 1), "%)", sep = "")
pie(specialization_female, labels = percent_labels_specialization_female, main = "Специализация - Женщины", col = rainbow(length(specialization_female)), border = "white")
par(mfrow = c(1, 1))
