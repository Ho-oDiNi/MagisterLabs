package ru.data.anonymization.tool.methods.options.type;

import lombok.Data;
import lombok.NoArgsConstructor;
import ru.data.anonymization.tool.methods.options.MaskItem;
import ru.data.anonymization.tool.service.DatabaseConnectionService;

import java.sql.ResultSet;
import java.util.List;

@Data
@NoArgsConstructor
public class Round implements MaskItem {

    private String nameTable;
    private String nameColumn;
    private int precision;

    @Override
    public String getTable() {
        return nameTable;
    }

    @Override
    public List<String> getColumn() {
        return List.of(nameColumn);
    }

    @Override
    public void start(DatabaseConnectionService controllerDB) throws Exception {
        controllerDB.execute("ALTER TABLE " + nameTable
                             + " ADD COLUMN masking_method_temp_id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE;");
        ResultSet resultSet = controllerDB.executeQuery(
                "SELECT " + nameColumn + ", masking_method_temp_id FROM " + nameTable + ";");

        double cur;
        while (resultSet.next()) {
            cur = resultSet.getDouble(1);
            cur = precision == 0 ? Double.valueOf((int) cur) :
                    Double.parseDouble(String.format("%." + precision + "f", cur)
                                             .replace(',', '.'));
            resultSet.updateObject(1, cur);
            resultSet.updateRow();
        }

        controllerDB.execute("ALTER TABLE " + nameTable + " DROP COLUMN masking_method_temp_id;");
    }

}
